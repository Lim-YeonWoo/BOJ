// BOJ 9343 랜덤걷기

/* 문제 분류: 수학, 정수론, 조합론, 모들로 곱셈 역원, 페르마의 소정리 */

/* 문제 설명:
	무한히 긴 직선의 원점에서 출발해, 왼쪽 오른쪽으로 움직인다.
	이때 2N번 움직여서 다시 원점에 오는 경우의 수는 C(2N,N)이다.
	하지만 이때 절대 음수점일 수 없다는 조건이 추가된다면(항상 0이나 양수) 
	N이 주어졌을 때 경우의 수는 어떻게 될까? (총 이동가능 수 2N, 왼쪽 N번 오른쪽 N번 이동해야함, 단 음수점은 밟을 수 x)
*/

/* 문제 풀이:
*/

/* 어려웠던 점 & 다시 한번 살펴볼 부분:
	맨 처음에는 재귀호출을 이용해 수형도를 그리듯 푸는 방법을 생각했다. 
	이때는, 수형도의 층 수가 logN개 라고 생각해, 100만=2^20, 10억=2^30이므로, 최대 층수가 20개라 해볼만하다 생각했다.
	하지만 이는 착각이었고, 실제 수형도의 층 수는 N개로 최대 층수가 100만(2^20)이므로 재귀호출을 하기엔 무리라고 판단해 멈췄다.

	모듈로역원을 구현해야하는데 어떻게 해야하는지 모르겠다.
*/

#include <iostream>
#include <algorithm>

using namespace std;

long long student[2000001];

int main(void) {
	ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	
	int T;
	cin >> T;

	while (T--) {
		int N;
		cin >> N; //총 2N번 이동. 왼N번 오N번.


	}
	
	return 0;
}
