// BOJ 2110 공유기설치

/* 문제 분류: 이분탐색 */

/* 문제 설명:
*  수직선 위 겹치지않는 N개의 집
* 어디서나 와이파이 즐길 수 있게 C개의 공유기를 설치하고자.
* 한 집에 공유기 하나만, 가장 인접한 두 공유기 사이의 거리를 가능한 크게.
* 
* C개의 공유기를 N개의 집에 적당히 설치해서, 가장 인접한 두 공유기 사이의 거리를 최대로 하는 프로그램
*/

/* 문제 풀이:
* 이분탐색.
* 1. 주어진 집 좌표 정렬
* 2. 최소거리는 1, 최대거리는 처음집,마지막집 사이거리
* 3. 이분탐색 진행. 
* 4. 3번에서 조건을 충족하는 거리 중 최대를 출력
*/

/* 어려웠던 점 & 다시 한번 살펴볼 부분:
*/

#include <iostream> 
#include <vector> 
#include <algorithm> 
using namespace std; 

int n ,c; 
vector<int> houses; 

int main() { 
	ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); 

	//0. 입력
	cin >> n >> c; 
	
	for (int i = 0; i < n; i++) { 
		int temp; 
		cin >> temp; 
		houses.push_back(temp); 
	} 

	//1. 주어진 집들의 좌표를 정렬
	sort(houses.begin(), houses.end()); 
	
	//2. 집들 사이의 거리를 초기화
	//최소 거리 1, 최대 거리 끝집-첫집 으로 초기화. 
	int start = 1; 
	int end = houses[n-1] - houses[0]; 
	int result = 0; 

	//3. 집들 사이의 거리를 기준으로 이분 탐색
	while (start <= end) { 
		//초기화
		int mid = (start+end) / 2; 
		int cnt = 1; 
		int prev_house = houses[0]; 
		
		//n까지 for문 돌리기
		for (int i = 1; i < n; i++) { 
			if (houses[i] - prev_house >= mid) { 
				cnt++; 
				prev_house = houses[i]; //이전집 변경
			} 
		} 
		
		//4. 3을 만족하는 거리 중 최댓값을 갱신한다. 
		//공유기를 제한 갯수 이내로 사용했을 경우 
		if (cnt >= c) { 
			result = max (result, mid); 
			start = mid+1; 
		} 
		//공유기를 제한 갯수보다 더 사용했을 경우
		else end = mid-1; 
	}
	
	cout << result; 
	
	return 0; 
}
