// BOJ 1222 홍준 프로그래밍 대회

/* 문제 분류: 수학, 정수론 */

/* 문제 설명:
* N개의 학교 출전. 각 학교별로 출전하는 인원이 주어짐.
* 예선1번 치룬 후 본선 치룰 예정.
* 팀을 이루어 참가해야하는 경기에서, 팀원수를 정해라. 
* 단, (각학교학생수)%(팀원수)=0 이어야 참가가 가능.
* 각 학교별로 1등한 팀만 본선 진출. 이때 본선 참가팀 수가 두팀이상이어야함.
*  본선에 참가하는 사람의 수를 최대가 되게 하는 (팀원수)를 정해라.
*/

/* 문제 풀이:
최소 두 학교에 대해 %(팀원수)=0이 되는 최대 (팀원수)를 정하면 됨.
하지만 공약수를 구한다는 방식 말고, 
어떤 팀원수 i에 대해, 그 i의 배수가 되는 학교들만 참가시킨다고 생각함. (for i=1~2000000. for문 돌고나서 최댓값 갱신.)
*/

/* 어려웠던 점 & 다시 한번 살펴볼 부분:
- (참가하는 학교 수) * (팀원 수) 의 최대값이 2000000 * 2000000 으로 매우 크다 >> long long형 필요
- 최소 두개이상의 학교의 공약수들을 구한다... 이렇게 생각했더니 알고리즘을 떠올리기도 힘들었고 시간복잡도가 너무 컸다.
  대신 어떤 팀원수 i에 대해, 그 i의 배수가 되는 학교들만 참가시킨다... 라고 생각하면 된다.
*/

#include <iostream>
#include <algorithm>

using namespace std;

long long student[2000001];

int main(void) {
	ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	
	int n;
	cin >> n;

	for (int i = 0; i < n; i++) {
		int a;
		cin >> a;
		student[a]++;
	}

	long long answer = 0;
	for (long long i = 1; i <= 2000000; i++) { //i는 팀원수.
		long long cnt = 0; //참가가능한 학교 수
		for (long long j = i; j <= 2000000; j += i) {//j는 i의 배수들
			cnt += student[j]; //i의 배수만큼의 학생수를 가진 학교 수 다 더하기. 즉 참가가능한 학교의 수를 구한것.
		}
		if (cnt >= 2) {//본선 참가하는 학교가 2개 이상이라면,
			answer = max(answer, cnt * i); //answer갱신 (참가가능학교수(cnt) * 팀원수(i))
		}
	}
	
	cout << answer << "\n";

	return 0;
}
